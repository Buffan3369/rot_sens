# Email: LewisA.Jones@outlook.com
#
# Script name:
# data_prep.R
# Script description:
# Data preparation and cleaning of Crocodylomorpha occurrence data set
#---------------------------------------------------------------------
#load libraries and functions needed for script
library(dplyr)
library(tibble)
#---------------------------------------------------------------------
#Download all Crocodylomorpha occurrences from the Paleobiology Database (https://paleobiodb.org/#/) using the API service
data <- read.csv("https://paleobiodb.org/data1.2/occs/list.csv?base_name=Crocodylomorpha&show=class")
write.csv(data, "./data/occurrences/raw_croc_dataset.csv", row.names = FALSE)
#Analyses focused on terrestrial taxa, load text file and remove all marine taxa from database
marine_taxa <- read.delim("./data/occurrences/marine_taxa.txt", header = FALSE)[,1]
#filter data from PBDB classification
data <- data %>% filter(!family %in% marine_taxa)
data <- data %>% filter(!genus %in% marine_taxa)
data <- data %>% filter(!accepted_name %in% marine_taxa)
#remove all form and ichnotaxa occurrence data
data <- data %>% filter(!flags %in% c("IF", "F", "I"))
#add mid_ma col
data <- data %>% add_column(mid_ma = (data$max_ma+data$min_ma)/2, .before = "min_ma")
data$mid_ma
seq(from = 540, to = 0, by = 10)
lower <- seq(from = 540, to = 0, by = -10)
lower <- seq(from = 540, to = 10, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
i <- 40
which(data$mid_ma > lower[i] & data$mid_ma < upper[i])
lower[i]
i <- 50
lower[i]
upper[i]
which(data$mid_ma < lower[i] & data$mid_ma > upper[i])
data[which(data$mid_ma < lower[i] & data$mid_ma > upper[i]),c("bin_mid_ma")]
#create empty columns for populating
data$bin_mid_ma <- NA
data[which(data$mid_ma < lower[i] & data$mid_ma > upper[i]),c("bin_mid_ma")]
#---------------------------------------------------------------------
# Date: 2022-03-10
# Author: Lewis A. Jones
# Copyright (c) Lewis A. Jones, 2022
# Email: LewisA.Jones@outlook.com
#
# Script name:
# data_prep.R
# Script description:
# Data preparation and cleaning of Crocodylomorpha occurrence data set
#---------------------------------------------------------------------
#load libraries needed for script
library(dplyr)
library(tibble)
#---------------------------------------------------------------------
#Download all Crocodylomorpha occurrences from the Paleobiology Database (https://paleobiodb.org/#/) using the API service
data <- read.csv("https://paleobiodb.org/data1.2/occs/list.csv?base_name=Crocodylomorpha&show=class")
#save raw data
write.csv(data, "./data/occurrences/raw_croc_dataset.csv", row.names = FALSE)
#Analyses focused on terrestrial taxa, load text file and remove all marine taxa from database
marine_taxa <- read.delim("./data/occurrences/marine_taxa.txt", header = FALSE)[,1]
#filter data from PBDB classification
data <- data %>% filter(!family %in% marine_taxa)
data <- data %>% filter(!genus %in% marine_taxa)
data <- data %>% filter(!accepted_name %in% marine_taxa)
#remove all form and ichnotaxa occurrence data
data <- data %>% filter(!flags %in% c("IF", "F", "I"))
#add mid_ma col
data <- data %>% add_column(mid_ma = (data$max_ma+data$min_ma)/2, .before = "min_ma")
#create empty columns for populating
data$bin_mid_ma <- NA
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
data[which(data$mid_ma < lower[i] & data$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#SAVE DATA--------------------------------------------------------------
write.csv(data, "./data/occurrences/cleaned_dataset.csv", row.names = FALSE)
head(data)
#---------------------------------------------------------------------
# Date: 2022-03-10
# Author: Lewis A. Jones
# Copyright (c) Lewis A. Jones, 2022
# Email: LewisA.Jones@outlook.com
#
# Script name:
# data_prep.R
# Script description:
# Data preparation and cleaning of Crocodylomorpha occurrence data set
#---------------------------------------------------------------------
#load libraries needed for script
library(dplyr)
library(tibble)
#---------------------------------------------------------------------
#Download all Crocodylomorpha occurrences from the Paleobiology Database (https://paleobiodb.org/#/) using the API service
data <- read.csv("https://paleobiodb.org/data1.2/occs/list.csv?base_name=Crocodylomorpha&show=class")
#save raw data
write.csv(data, "./data/occurrences/raw_croc_dataset.csv", row.names = FALSE)
#Analyses focused on terrestrial taxa, load text file and remove all marine taxa from database
marine_taxa <- read.delim("./data/occurrences/marine_taxa.txt", header = FALSE)[,1]
#filter data from PBDB classification
data <- data %>% filter(!family %in% marine_taxa)
data <- data %>% filter(!genus %in% marine_taxa)
data <- data %>% filter(!accepted_name %in% marine_taxa)
#remove all form and ichnotaxa occurrence data
data <- data %>% filter(!flags %in% c("IF", "F", "I"))
#add mid_ma col
data <- data %>% add_column(mid_ma = (data$max_ma+data$min_ma)/2, .before = "min_ma")
#TIME BINNING----------------------------------------------------------
#assign to 10 myr time bins
#create empty columns for populating
data$bin_mid_ma <- NA
#whole of Phanerozoic
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
data[which(data$mid_ma < lower[i] & data$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#SAVE DATA--------------------------------------------------------------
write.csv(data, "./data/occurrences/cleaned_dataset.csv", row.names = FALSE)
#---------------------------------------------------------------------
# Date: 2022-03-10
# Author: Lewis A. Jones
# Copyright (c) Lewis A. Jones, 2022
# Email: LewisA.Jones@outlook.com
#
# Script name:
# data_prep.R
# Script description:
# Data preparation and cleaning of Crocodylomorpha occurrence data set
#---------------------------------------------------------------------
#load libraries needed for script
library(dplyr)
library(tibble)
#---------------------------------------------------------------------
#Download all Crocodylomorpha occurrences from the Paleobiology Database (https://paleobiodb.org/#/) using the API service
data <- read.csv("https://paleobiodb.org/data1.2/occs/list.csv?base_name=Crocodylomorpha&show=class")
#save raw data
saveRDS(data, "./data/occurrences/raw_croc_dataset.RDS")
#Analyses focused on terrestrial taxa, load text file and remove all marine taxa from database
marine_taxa <- read.delim("./data/occurrences/marine_taxa.txt", header = FALSE)[,1]
#filter data from PBDB classification
data <- data %>% filter(!family %in% marine_taxa)
data <- data %>% filter(!genus %in% marine_taxa)
data <- data %>% filter(!accepted_name %in% marine_taxa)
#remove all form and ichnotaxa occurrence data
data <- data %>% filter(!flags %in% c("IF", "F", "I"))
#add mid_ma col
data <- data %>% add_column(mid_ma = (data$max_ma+data$min_ma)/2, .before = "min_ma")
#TIME BINNING----------------------------------------------------------
#assign to 10 myr time bins
#create empty columns for populating
data$bin_mid_ma <- NA
#whole of Phanerozoic
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
data[which(data$mid_ma < lower[i] & data$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#SAVE DATA--------------------------------------------------------------
saveRDS(data, "./data/occurrences/cleaned_dataset.RDS")
#SAVE DATA--------------------------------------------------------------
saveRDS(data, "./data/occurrences/cleaned_croc_dataset.RDS")
#-------------------------------------------------
#Load PARED data
PARED <- read.csv("./data/occurrences/PARED_06_10_2021.csv")
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- read.csv("./data/occurrences/PARED_06_10_2021.csv")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- read.csv("./data/occurrences/PARED_06_10_2021.csv")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
saveRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
saveRDS(PARED, "./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/PARED_06_10_2021.RDS")
#-------------------------------------------------
#Load PARED data
PARED <- read.csv("./data/occurrences/PARED_06_10_2021.csv")
saveRDS(PARED, "./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
PARED
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#create empty cells for populating
PARED$mid_ma <- NA
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#create empty columns for populating
data$bin_mid_ma <- NA
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#create empty columns for populating
PARED$bin_mid_ma <- NA
#whole of Phanerozoic
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
PAARED[which(PAARED$mid_ma < lower[i] & PAARED$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#assign bins to data
for(i in 1:length(upper)){
PARED[which(PARED$mid_ma < lower[i] & PARED$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
head(PARED)
View(PARED)
max(PARED$max_ma)
unique(PARED$max_ma)
sort(unique(PARED$max_ma))
#remove any coral reefs older than Anisian (247.2 Ma) as these represent non-scleractinian reefs
PARED <- subset(PARED, max_ma > 247.2)
View(PARED)
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#remove any coral reefs older than Anisian (247.2 Ma) as these represent non-scleractinian reefs
PARED <- subset(PARED, max_ma < 247.2)
PARED
View(PARED)
sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))
sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text
PARED[sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text,]
test <- PARED[sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text,]
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#retain only Scleractinian reefs
PARED <- PARED[sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text,]
#remove any coral reefs older than Anisian (247.2 Ma) as these represent non-scleractinian reefs
PARED <- subset(PARED, max_ma < 247.2)
#-------------------------------------------------
#
# Date: 2022-03-10
# Author: Lewis A. Jones
# Copyright (c) Lewis A. Jones, 2022
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#retain only Scleractinian reefs
PARED <- PARED[sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text,]
#remove any coral reefs older than Anisian (247.2 Ma) as these imply non-scleractinian reefs
PARED <- subset(PARED, max_ma < 247.2)
#TIME BINNING----------------------------------------------------------
#assign to 10 myr time bins
#create empty columns for populating
PARED$bin_mid_ma <- NA
#whole of Phanerozoic
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
PARED[which(PARED$mid_ma < lower[i] & PARED$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#SAVE DATA--------------------------------------------------------------
saveRDS(PARED, "./data/occurrences/cleaned_reef_dataset.RDS")
#-------------------------------------------------
#
# Date: 2022-03-10
# Author: Lewis A. Jones
# Copyright (c) Lewis A. Jones, 2022
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#retain only Scleractinian reefs
PARED <- PARED[sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text,]
#remove any coral reefs older than Anisian (247.2 Ma) as these imply non-scleractinian reefs
PARED <- subset(PARED, max_ma < 247.2)
#TIME BINNING----------------------------------------------------------
#assign to 10 myr time bins
#create empty columns for populating
PARED$bin_mid_ma <- NA
#whole of Phanerozoic
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
PARED[which(PARED$mid_ma < lower[i] & PARED$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#SAVE DATA--------------------------------------------------------------
saveRDS(PARED, "./data/occurrences/cleaned_PARED_dataset.RDS")
View(PARED)
head(PARED[,c("max_ma", "mid_ma", "min_ma", "bin_mid_ma")])
#-------------------------------------------------
#
# Date: 2022-03-10
# Author: Lewis A. Jones
# Copyright (c) Lewis A. Jones, 2022
# Email: LewisA.Jones@outlook.com
#
# Script name:
# prepare_fossil_reef_data.R
#
# Script description:
# Prepare fossil reef occurrence data
#
#-------------------------------------------------
#Load libraries, functions and analyses options
library(dplyr)
library(stringr)
#-------------------------------------------------
#Load PARED data
PARED <- readRDS("./data/occurrences/raw_PARED_06_10_2021.RDS")
#-------------------------------------------------
#PREPARE PARED DATA
#retain only coral reefs
PARED <- subset(PARED, biota_main_t == "Corals" | biota_sec_text == "Corals")
#retain only outcropping reefs (subsurface reefs unreliable for affiliation)
PARED <- subset(PARED, subsurface_text == "Outcropping reef")
#retain only true reefs
PARED <- subset(PARED, type_text == "True reef")
#remove cold water/temperate coral reefs
PARED <- subset(PARED, tropical_text == "Tropical or unknown")
#assign mid-age
PARED$mid_ma <- (PARED$max_ma+PARED$min_ma)/2
#retain only Scleractinian reefs
PARED <- PARED[sapply(colnames(PARED), function(x) grep("Scleractinia", PARED[,x]))$biota_deta_text,]
#remove any coral reefs older than Anisian (247.2 Ma) as these imply non-scleractinian reefs
PARED <- subset(PARED, max_ma < 247.2)
#TIME BINNING----------------------------------------------------------
#assign to 10 myr time bins
#create empty columns for populating
PARED$bin_mid_ma <- NA
#whole of Phanerozoic
lower <- seq(from = 540, to = 10, by = -10)
mid <- seq(from = 535, to = 5, by = -10)
upper <- seq(from = 530, to = 0, by = -10)
#assign bins to data
for(i in 1:length(upper)){
PARED[which(PARED$mid_ma < lower[i] & PARED$mid_ma > upper[i]),c("bin_mid_ma")] <- mid[i]
}
#SAVE DATA--------------------------------------------------------------
saveRDS(PARED, "./data/occurrences/cleaned_PARED_dataset.RDS")
